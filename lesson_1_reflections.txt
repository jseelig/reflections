How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

>It pointed me to the line numbers where differences between the two files 
>existed.

How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?

>I wouldn't have to manually name and save different versions of my files. Also
>I would have easier access to different file versions.

What do you think are the pros and cons of manually choosing when to create a 
commit, like you do in Git, vs having versions automatically saved, like Google 
Docs does?

>Pros: Only saving when necessary prevents having too many versions saved and 
>      thus makes it easier to find the right version. 
>	  
>Cons: One could save too often or not often enough and it includes some manual
>      work to be done.
	  
Why do you think some version control systems, like Git, allow saving multiple 
files in one commit, while others, like Google Docs, treat each file separately?

>Some files might have dependencies, why they should be tracked together. Google
>Docs allows to create office documentes, which normally don't have 
>dependencies.

How can you use the commands git log and git diff to view the history of files?

>The command git log shows a history of the commits. With the ID's of the 
>commits and git diff the changes between the commits can be shown.

How might using version control make you more confident to make changes that 
could break something?

>It allows me to revert to any commit.

Now that you have your workspace set up, what do you want to try using Git for?

> Version control a new project.
	  